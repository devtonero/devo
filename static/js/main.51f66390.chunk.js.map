{"version":3,"sources":["components/search-box/search-box.components.jsx","components/card/card.components.jsx","components/card-list/card-list.components.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchBox","placeholder","handleChange","className","type","onChange","Card","props","alt","src","IconComputers","id","name","email","Cardlist","map","App","e","setState","searchbox","target","value","state","fetch","then","response","json","users","this","Filteredsearchbox","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSAIaA,EAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OAErB,uBAAOC,UAAY,SACfC,KAAO,SACPH,YAAeA,EACfI,SAAYH,KCLPI,G,MAAO,SAACC,GAAD,OAChB,sBAAKJ,UAAW,iBAAhB,UACK,qBAAKK,IAAI,YACVC,IAAG,+BAA2BF,EAAMG,cAAcC,GAA/C,4BAGH,mCAAMJ,EAAMG,cAAcE,KAA1B,OACA,4BAAIL,EAAMG,cAAcG,aCLnBC,G,MAAW,SAACP,GACxB,OAAQ,qBAAKJ,UAAY,YAAjB,SACHI,EAAMG,cAAcK,KAAI,SAAAL,GAAa,OACtC,cAAE,EAAF,CAA8BA,cAAiBA,GAAnCA,EAAcC,WCmChBK,E,kDAtCd,aAAc,IAAD,8BACX,gBAcFd,aAAe,SAACe,GACd,EAAKC,SAAU,CAACC,UAAWF,EAAEG,OAAOC,SAbpC,EAAKC,MAAQ,CACXZ,cAAe,GACfS,UAAW,IALF,E,qDASb,WAAqB,IAAD,OACnBI,MAAM,8CACGC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACR,cAAeiB,S,oBAQrD,WACE,MAAmCC,KAAKN,MAAjCZ,EAAP,EAAOA,cAAeS,EAAtB,EAAsBA,UAChBU,EAAoBnB,EAAcoB,QAAO,SAAApB,GAAa,OAC1DA,EAAcE,KAAKmB,cAAcC,SAASb,EAAUY,kBAGxD,OAAQ,sBAAK5B,UAAU,MAAf,UACN,gDACC,cAAC,EAAD,CACGF,YAAc,gBACdC,aAAgB0B,KAAK1B,eAEvB,cAAE,EAAF,CAAWQ,cAAemB,W,GAjCdI,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.51f66390.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n\r\n    <input className = 'search'\r\n        type = 'search' \r\n        placeholder = {placeholder} \r\n        onChange = {handleChange}\r\n    />\r\n);","import React from 'react';\r\n\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => (\r\n    <div className= 'card-container'>\r\n         <img alt=\"computers\" \r\n        src ={`https://robohash.org/${props.IconComputers.id}?set=set2&size=180x180`}\r\n        /> \r\n       \r\n        <h2> {props.IconComputers.name} </h2>\r\n        <p>{props.IconComputers.email}</p>\r\n    </div>\r\n)","import React from 'react';\r\n\r\nimport {Card} from '../card/card.components';\r\n\r\nimport './card-list.styles.css';\r\n\r\nexport const Cardlist = (props) => {\r\n return (<div className = 'card-list'>\r\n     {props.IconComputers.map(IconComputers =>(\r\n     < Card key={IconComputers.id} IconComputers = {IconComputers} />\r\n     ))}\r\n\r\n </div>)}","import React from 'react';\nimport './App.css';\nimport { SearchBox } from './components/search-box/search-box.components';\nimport { Cardlist } from './components/card-list/card-list.components';\n\nclass App extends React.Component {\n constructor(){\n   super();\n\n   this.state = {\n     IconComputers: [],\n     searchbox: ''\n   };\n }\n\n componentDidMount() {\n  fetch('https://jsonplaceholder.typicode.com/users')\n          .then(response => response.json())\n          .then(users => this.setState({IconComputers: users}));\n }\n\n handleChange = (e) => {\n   this.setState ({searchbox: e.target.value});\n  }\n\n\n  render (){\n    const {IconComputers, searchbox} = this.state;\n    const Filteredsearchbox = IconComputers.filter(IconComputers => \n      IconComputers.name.toLowerCase().includes(searchbox.toLowerCase() ) \n      );\n\n  return (<div className=\"App\">\n    <h1>Icon Computers</h1>\n     <SearchBox\n        placeholder = 'Search Laptop' \n        handleChange = {this.handleChange}\n      />\n      < Cardlist IconComputers={Filteredsearchbox}/>\n     \n  </div>)\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}